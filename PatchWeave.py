#! /usr/bin/env python3
# -*- coding: utf-8 -*-

import time
import Output
import Common
from Utilities import error_exit, create_directories


def initialize():
    create_directories()


def run_patchweave():
    Output.initialize()
    start_time = time.time()
    time_info = dict()

    # Initialize first run
    initialize()

    # Prepare projects directories by getting paths and cleaning residual files
    initialization_start_time = time.time()
    #Initialization.initialize()
    time_info[Common.KEY_DURATION_INITIALIZATION] = str(time.time() - initialization_start_time)

    function_identification_start_time = time.time()
    #Detection.detect()
    time_info[Common.KEY_DURATION_CLONE_DETECTION] = str(time.time() - function_identification_start_time)

    patch_extraction_start_time = time.time()
    #Extraction.extract()
    patch_extraction_duration = str(time.time() - patch_extraction_start_time)

    mapping_start_time = time.time()
    #Mapping.generate()
    time_info[Common.KEY_DURATION_TRANSLATION] = str(time.time() - mapping_start_time)

    translation_start_time = time.time()
    #Translation.translate()
    translation_duration = str(time.time() - translation_start_time)

    transplantation_start_time = time.time()
    #Weaver.weave()
    time_info[Common.KEY_DURATION_TRANSPLANTATION] = str(time.time() - transplantation_start_time)

    # Final clean
    #Logger.title("Cleaning residual files generated by Crochet...")

    # Final running time and exit message
    time_info[Common.KEY_DURATION_TOTAL] = str(time.time() - start_time)
    Output.end(time_info)


if __name__ == "__main__":
    try:
        run_patchweave()
    except KeyboardInterrupt as e:
        error_exit("Program Interrupted by User")
