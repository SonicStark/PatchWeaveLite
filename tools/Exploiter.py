#! /usr/bin/env python3
# -*- coding: utf-8 -*-


import sys
import subprocess
from common.Utilities import error_exit
from tools import Logger, Emitter

crash_word_list = ["abort", "core dumped", "crashed"]


def run_exploit(exploit_command, project_path, poc_path, output_file_path):
    Logger.trace(__name__ + ":" + sys._getframe().f_code.co_name, locals())
    exploit_command = str(exploit_command).replace('$POC', poc_path)
    exploit_command = project_path + exploit_command + " > " + output_file_path + " 2>&1"
    # print(exploit_command)
    # Print executed command and execute it in console
    Emitter.command(exploit_command)
    process = subprocess.Popen([exploit_command], shell=True)
    output, error = process.communicate()
    with open(output_file_path, "r") as output_file:
        output = output_file.readlines()
    return_code = process.returncode
    if any(crash_word in str(output).lower() for crash_word in crash_word_list):
        donor_crashed = True
        Emitter.normal("\tprogram crashed with exit code " + str(return_code))
    else:
        if return_code != 0:
            Emitter.normal("\tprogram exited with exit code " + str(return_code))
            Emitter.program_output(output)
        else:
            error_exit("program did not crash!!")

